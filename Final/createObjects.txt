if (ImGui::Button("Forest"))
                {
                    float pos_y = 0.0f;
                    float grass_scale = (randFloat() * 0.5) + 0.03;

                    for (int i = 0; i < 100; i++) // Standard Tree
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(3.5f, 4.5f);
                        float rotY = randRange(0.0f, 6.4f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(0).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);
                        
                        objects.push_back(Object(0,
                                                 pos,
                                                 -1.6f, 0.0f, rotY,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(0).collision_radius * scale,
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 70; i++) // Tall Standard Tree
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(3.5f, 4.5f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(1).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(1,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, m.findbyId(1).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 20; i++) // Birch Tree
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(3.5f, 4.5f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(2).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(2,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, m.findbyId(2).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    /* for (int i = 0; i < 30; i++) // Dead Tree
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(3.5f, 4.5f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(3).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(3,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, m.findbyId(3).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }*/
                    for (int i = 0; i < 20; i++) // Stump
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(2.5f, 3.5f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(4).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(4,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, m.findbyId(4).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 30; i++) // Rock 1
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(0.2f, 0.3f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(5).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(5,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, m.findbyId(5).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 20; i++) // Rock 2
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(0.2f, 0.4f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(6).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(6,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, m.findbyId(6).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 30; i++) // Rock 2
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(0.1f, 0.3f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(7).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(7,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, m.findbyId(7).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 40; i++) // Square Rock
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(0.4f, 0.5f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(8).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(8,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, m.findbyId(8).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 3; i++) // Campfire
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = 0.3f;
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(16).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(16,
                                                 pos,
                                                 0.0f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(16).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 3; i++) // Snail
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = 0.1f;
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(17).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(17,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, m.findbyId(17).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 20; i++) // Fern
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(0.5f, 1.0f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(18).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(18,
                                                 pos,
                                                 0.0f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, m.findbyId(18).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }

                    for (int i = 0; i < 10; i++) // deer_1
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(1.0f, 1.5f);
                        float rot = randRange(0.0f, 3.2f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(37).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(37,
                                                 pos,
                                                 0.0f, rot, 0.0f,
                                                 vec3(1), scale * default_view, m.findbyId(37).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }

                    for (int i = 0; i < 10; i++) // deer_2
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(1.0f, 1.5f);
                        float rot = randRange(0.0f, 3.2f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(38).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(38,
                                                 pos,
                                                 0.0f, rot, 0.0f,
                                                 vec3(1), scale * default_view, m.findbyId(38).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }

                    for (int i = 0; i < 10; i++) // deer_1
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(0.3f, 0.7f);
                        float rot = randRange(0.0f, 3.2f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(39).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(39,
                                                 pos,
                                                 0.0f, rot, 0.0fS
                                                 vec3(1), scale * default_view, m.findbyId(39).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }

                    for (int i = 0; i < 4000; i++) // Grass
                    {
                        for (int j = 23; j < 32; j++) // Types
                        {
                            int goodVal = 0;
                            float pos_x;
                            float pos_z;
                            while(!goodVal)
                            {
                                pos_x = randCoord();
                                pos_z = randCoord();
                                if (snapToTerrain)
                                {
                                    pos_y = terrain.heightAt(pos_x, pos_z) + grass_scale * m.findbyId(j).y_offset;
                                    if(pos_y > (water.height + 0.6))
                                    {
                                        goodVal = 1;
                                    }
                                }
                                else
                                {
                                    goodVal = 1;
                                }
                            }

                            vec3 pos = vec3(pos_x, pos_y, pos_z);

                            objects.push_back(Object(j,
                                                     pos,
                                                     -1.6f, 0.0f, 0.0f,
                                                     vec3(1), default_view * grass_scale, m.findbyId(j).collision_radius * grass_scale, 
                                                     grass_scale, false, false, 0, 1));
                            selectedObject = objects.size() - 1;
                        }
                    }
                }
                ImGui::SameLine();
                if (ImGui::Button("tree3"))
                {
                    float pos_y = 0.0f;
                    for (int i = 0; i < 20; i++) // Birch Tree
                    {
                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float scale = randRange(3.5f, 4.5f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(2).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(2,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, m.findbyId(2).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                }

                ImGui::SameLine();
                if (ImGui::Button("Desert"))
                {
                    float pos_y = 0.0f;

                    for (int i = 0; i < 20; i++) // Formation 1
                    {
                        float pos_x = randCoordDes();
                        float pos_z = randCoordDes();
                        float scale = 1.0f;
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(9).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(9,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(9).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 10; i++) // Formation 2
                    {
                        float pos_x = randCoordDes();
                        float pos_z = randCoordDes();
                        float scale = randRange(0.5f, 1.0f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(10).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(10,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(10).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }

                    for (int i = 0; i < 10; i++) // Formation 3
                    {
                        float pos_x = randCoordDes();
                        float pos_z = randCoordDes();
                        float scale = randRange(0.5f, 1.0f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(11).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(11,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(11).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 10; i++) // Formation 4
                    {
                        float pos_x = randCoordDes();
                        float pos_z = randCoordDes();
                        float scale = randRange(0.5f, 1.0f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(12).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(12,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(12).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 10; i++) // Formation 5
                    {
                        float pos_x = randCoordDes();
                        float pos_z = randCoordDes();
                        float scale = randRange(0.5f, 1.0f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(13).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(13,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(13).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 10; i++) // Formation 6
                    {
                        float pos_x = randCoordDes();
                        float pos_z = randCoordDes();
                        float scale = randRange(0.5f, 1.0f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(14).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(14,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(14).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 10; i++) // Formation 7
                    {
                        float pos_x = randCoordDes();
                        float pos_z = randCoordDes();
                        float scale = randRange(0.5f, 1.0f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(15).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(15,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(15).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }

                    for (int i = 0; i < 20; i++) // Formation 1
                    {
                        float pos_x = randCoordDes();
                        float pos_z = randCoordDes();
                        float scale = 1.0f;
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(19).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(19,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(19).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 20; i++) // Formation 1
                    {
                        float pos_x = randCoordDes();
                        float pos_z = randCoordDes();
                        float scale = 1.0f;
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(20).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(20,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(20).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }

                    for (int i = 0; i < 20; i++) // Formation 1
                    {
                        float pos_x = randCoordDes();
                        float pos_z = randCoordDes();
                        float scale = 1.0f;
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(21).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(21,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(21).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }

                    for (int i = 0; i < 20; i++) // Formation 1
                    {
                        float pos_x = randCoordDes();
                        float pos_z = randCoordDes();
                        float scale = 0.25f;
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(22).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(22,
                                                 pos,
                                                 -1.6f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(22).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                    for (int i = 0; i < 30; i++) // Formation 1
                    {
                        float pos_x = randCoordDes();
                        float pos_z = randCoordDes();
                        float scale = randRange(0.3f, 0.5f);
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(40).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(40,
                                                 pos,
                                                 0.0f, 0.0f, 0.0f,
                                                 vec3(1), scale * default_view, 
                                                 m.findbyId(40).collision_radius * scale, 
                                                 scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }
                }
                ImGui::SameLine();
                if (ImGui::Button("Street"))
                {
                    float powerline_view = 4.0f;
                    float road_scale = 3.5f;
                    float lamp_scale = 0.75f;
                    for (int i = 0; i < 18; i++){
                        objects.push_back(Object(32,
                                                vec3(-0.5f,-7.5f,-128 + 15.8f * i),
                                                -1.5708f, 0.0f, 0.0f,
                                                vec3(1), road_scale * default_view * 1.5f, m.findbyId(32).collision_radius * road_scale, 
                                                road_scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }

                    for (int i = 0; i < 15; i++){
                        objects.push_back(Object(34,
                                                vec3(3.2f,-3.4f,-128 + 31.6f * i),
                                                0.0f, 3.2f, 0.0f,
                                                vec3(1), lamp_scale * default_view, m.findbyId(34).collision_radius * lamp_scale, 
                                                lamp_scale, false, false, 0, 1));
                        objects.push_back(Object(34,
                                                vec3(-4.2f,-3.4f,-128 + 31.6f * i),
                                                0.0f, 0.0f, 0.0f,
                                                vec3(1), lamp_scale * default_view, m.findbyId(34).collision_radius * lamp_scale, 
                                                lamp_scale, false, false, 0, 1));
                        selectedObject = objects.size() - 2;

                        lights.push_back(Light(vec3(2.1f, -0.9f, -128 + 31.6f * i),
                                                vec3(0.0f),
                                                vec3(0.45f,0.31f,0.2f),
                                                vec3(0.35f,0.20f,0.13f),
                                                0.4f, 1.0f,0.09f));
                        lights.push_back(Light(vec3(-3.1f, -0.9f, -128 + 31.6f * i),
                                                vec3(0.0f),
                                                vec3(0.45f,0.31f,0.2f),
                                                vec3(0.35f,0.20f,0.13f),
                                                0.4f, 1.0f,0.09f));
                    }

                    for (int i = 0; i < 28; i++){
                        objects.push_back(Object(35,
                                                vec3(6.0f,-8.5f,-128 + 17.0f * i),
                                                0.0f, 0.0f, 0.0f,
                                                vec3(1), lamp_scale * powerline_view * 1.5, m.findbyId(35).collision_radius, 
                                                1.0f, false, false, 0, 1));
                        objects.push_back(Object(35,
                                                vec3(-7.0f,-8.5f,-128 + 16.0f * i),
                                                0.0f, 0.0f, 0.0f,
                                                vec3(1), lamp_scale * powerline_view * 1.5, m.findbyId(35).collision_radius, 
                                                1.0f, false, false, 0, 1));
                        selectedObject = objects.size() - 2;
                    }

                    for (int i = 0; i < 5; i++){
                        objects.push_back(Object(36,
                                                vec3(3.2f,-4.1f,-124 + 63.2f * i),
                                                0.0f, 0.0f, 0.0f,
                                                vec3(1), lamp_scale * default_view, m.findbyId(36).collision_radius * lamp_scale, 
                                                lamp_scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }

                    for (int i = 0; i < 15; i++){

                        float pos_x = randCoord();
                        float pos_z = randCoord();
                        float pos_y = 0.0f;
                        float scale = 10.0f;
                        if (snapToTerrain)
                            pos_y = terrain.heightAt(pos_x, pos_z) + scale * m.findbyId(41).y_offset;
                        vec3 pos = vec3(pos_x, pos_y, pos_z);

                        objects.push_back(Object(41,
                                                pos,
                                                -1.57f, 0.0f, 0.0f,
                                                vec3(1), scale * default_view, m.findbyId(41).collision_radius * scale, 
                                                scale, false, false, 0, 1));
                        selectedObject = objects.size() - 1;
                    }

                }